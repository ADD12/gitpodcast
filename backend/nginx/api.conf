server {
    server_name api.gitdiagram.com;

    # Block requests with no valid Host header
    if ($host !~ ^(api.gitdiagram.com)$) {
        return 444;
    }

    # Only allow specific HTTP methods
    if ($request_method !~ ^(GET|POST|OPTIONS)$) {
        return 444;
    }

    # Block these requests BEFORE the location / block
    location = /favicon.ico {
        return 404;
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        return 404;
        access_log off;
        log_not_found off;
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location / {
        proxy_pass http://127.0.0.1:8000;
        include proxy_params;
        proxy_redirect off;
    }

    # Add timeout settings
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.gitdiagram.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.gitdiagram.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = api.gitdiagram.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name api.gitdiagram.com;
    return 404; # managed by Certbot
}